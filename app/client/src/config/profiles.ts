export const profiles = {
  actions: {
    description:
      'Contains detailed information on plans to restore and protect water quality including Total Maximum Daily Loads (TMDLs), 4b Plans, 5R Plans, Protection Approaches, and other plans.',
    columns: new Set([
      'objectId',
      'actionAgency',
      'actionId',
      'actionName',
      'actionType',
      'assessmentUnitId',
      'assessmentUnitName',
      'completionDate',
      'includeInMeasure',
      'inIndianCountry',
      'locationDescription',
      'organizationId',
      'organizationName',
      'organizationType',
      'parameter',
      'region',
      'state',
      'waterSize',
      'waterSizeUnits',
      'waterType',
    ]),
    label: 'Actions',
    resource: 'actions',
  },
  assessments: {
    description:
      'Contains detailed information on waters assessed under Section 305(b) of the Clean Water Act and waters listed as impaired under Section 303(d) of the Clean Water Act. This includes assessed uses and parameter attainments.',
    columns: new Set([
      'objectId',
      'alternateListingIdentifier',
      'assessmentBasis',
      'assessmentDate',
      'assessmentMethods',
      'assessmentTypes',
      'assessmentUnitId',
      'assessmentUnitName',
      'assessmentUnitStatus',
      'associatedActionAgency',
      'associatedActionId',
      'associatedActionName',
      'associatedActionStatus',
      'associatedActionType',
      'consentDecreeCycle',
      'cwa303dPriorityRanking',
      'cycleExpectedToAttain',
      'cycleFirstListed',
      'cycleId',
      'cycleLastAssessed',
      'cycleScheduledForTmdl',
      'delisted',
      'delistedReason',
      'epaIrCategory',
      'locationDescription',
      'monitoringEndDate',
      'monitoringStartDate',
      'organizationId',
      'organizationName',
      'organizationType',
      'overallStatus',
      'parameterAttainment',
      'parameterGroup',
      'parameterIrCategory',
      'parameterName',
      'parameterStateIrCategory',
      'parameterStatus',
      'pollutantIndicator',
      'region',
      'reportingCycle',
      'seasonEndDate',
      'seasonStartDate',
      'sizeSource',
      'sourceScale',
      'state',
      'stateIrCategory',
      'useClassName',
      'useGroup',
      'useIrCategory',
      'useName',
      'useStateIrCategory',
      'useSupport',
      'vision303dPriority',
      'waterSize',
      'waterSizeUnits',
      'waterType',
    ]),
    label: 'Assessments',
    resource: 'assessments',
  },
  assessmentUnits: {
    description:
      'Contains detailed information on assessment unit location and waterbody types. Please note, some waters may contain more than one water type.',
    columns: new Set([
      'objectId',
      'assessmentUnitId',
      'assessmentUnitName',
      'assessmentUnitStatus',
      'cycleId',
      'locationDescription',
      'locationText',
      'locationTypeCode',
      'organizationId',
      'organizationName',
      'organizationType',
      'region',
      'reportingCycle',
      'sizeSource',
      'state',
      'useClassName',
      'waterSize',
      'waterSizeUnits',
      'waterType',
    ]),
    label: 'Assessment Units',
    resource: 'assessmentUnits',
  },
  assessmentUnitsMonitoringLocations: {
    description:
      'Contains information on the monitoring locations used to make assessment determinations at specific assessment units.',
    columns: new Set([
      'objectId',
      'assessmentUnitId',
      'assessmentUnitName',
      'assessmentUnitStatus',
      'cycleId',
      'locationDescription',
      'monitoringLocationDataLink',
      'monitoringLocationId',
      'monitoringLocationOrgId',
      'organizationId',
      'organizationName',
      'organizationType',
      'region',
      'reportingCycle',
      'sizeSource',
      'sourceScale',
      'state',
      'useClassName',
      'waterSize',
      'waterSizeUnits',
      'waterType',
    ]),
    label: 'Assessment Units with Monitoring Locations',
    resource: 'assessmentUnitsMonitoringLocations',
  },
  catchmentCorrespondence: {
    description:
      'Contains the association between assessment units and National Hydrography Dataset Plus (NHDPlus) high resolution catchments.',
    columns: new Set([
      'objectId',
      'assessmentUnitId',
      'assessmentUnitName',
      'catchmentNhdPlusId',
      'cycleId',
      'organizationId',
      'organizationName',
      'organizationType',
      'region',
      'reportingCycle',
      'state',
    ]),
    label: 'Catchment Correspondence',
    resource: 'catchmentCorrespondence',
  },
  sources: {
    description: 'Identifies sources of impairment for assessed waters.',
    columns: new Set([
      'objectId',
      'assessmentUnitId',
      'assessmentUnitName',
      'causeName',
      'confirmed',
      'cycleId',
      'epaIrCategory',
      'locationDescription',
      'organizationId',
      'organizationName',
      'organizationType',
      'overallStatus',
      'parameterGroup',
      'region',
      'reportingCycle',
      'sourceName',
      'state',
      'stateIrCategory',
      'waterSize',
      'waterSizeUnits',
      'waterType',
    ]),
    label: 'Sources',
    resource: 'sources',
  },
  tmdl: {
    description:
      'Contains detailed information on Total Maximum Daily Load (TMDL) plans.',
    columns: new Set([
      'objectId',
      'actionAgency',
      'actionId',
      'actionName',
      'addressedParameter',
      'assessmentUnitId',
      'assessmentUnitName',
      'completionDate',
      'explicitMarginOfSafety',
      'fiscalYearEstablished',
      'implicitMarginOfSafety',
      'includeInMeasure',
      'inIndianCountry',
      'loadAllocation',
      'loadAllocationUnits',
      'locationDescription',
      'npdesIdentifier',
      'organizationId',
      'organizationName',
      'organizationType',
      'otherIdentifier',
      'pollutant',
      'region',
      'sourceType',
      'state',
      'tmdlDate',
      'waterSize',
      'waterSizeUnits',
      'wasteLoadAllocation',
      'waterType',
    ]),
    label: 'Total Maximum Daily Load',
    resource: 'tmdl',
  },
} as const;

export type Profile = keyof typeof profiles;
